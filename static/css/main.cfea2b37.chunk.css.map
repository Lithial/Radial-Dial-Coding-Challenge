{"version":3,"sources":["webpack://src/styles/main.scss","webpack://src/styles/_variables.scss"],"names":[],"mappings":"AAyCA,EACE,QAAS,CACT,SAAU,CACV,qBAAsB,CACvB,KAMC,wBClDiB,CDoDjB,WAAY,CACb,WAFC,gBAWuB,CATxB,MAIC,UAAW,CAEX,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,sBAAuB,CACxB,eAIC,YAAa,CACb,eAAgB,CACjB,cAKC,WAAY,CACZ,iBAAkB,CAClB,WAAY,CACZ,YAAa,CACd,QAGC,oBAAoB,CACpB,WAAY,CACZ,YAAa,CACb,gBAAgB,CAChB,wBAAwB,CACxB,WAAW,CACX,kBAAkB,CAClB,cAAc,CACd,UAAU,CACV,4BAA8B,CAC9B,cAAc,CACd,oBAAoB,CACpB,2BAA2B,CAb7B,cAeI,qBAAqB,CAfzB,eAkBI,iBAAiB,CACjB,OAAO,CACR,KAKD,wBCjGW,CDkGZ,KAEC,qCCxGiC,CDyGlC,OAEC,sCC7GkC,CD8GnC,gBAWC,WAAY,CACZ,YAAa,CAEb,2BAA4B,CAC5B,sBAAuB,CACvB,iBAAkB,CAClB,cAAe,CAChB,wBARC,WAAY,CAGZ,YAoBkB,CAfnB,QAQC,aAAe,CACf,iBAAkB,CAElB,YAAa,CACb,WAAY,CACZ,wBC/IiB,CDgJjB,oCC1IsC,CD2ItC,iBAAkB,CAOnB,kBAKC,WAAY,CACZ,YAAa,CACb,WAAY,CACZ,YAAa,CACb,qCAAuC,CACvC,kCAAoC,CACpC,iBAAkB,CAClB,cAAe,CAChB,KAKC,gBAAiB,CAClB,KAEC,YCnKgB,CDoKhB,sBAAuB,CACvB,kBAAmB,CACpB,MAEC,YAAa,CACb,iBAAkB,CAClB,QAAS,CACV,aAOC,YAAa,CACb,iBAAoB,CACpB,YAAa,CACb,WAAY,CACZ,6BAA8B,CAC9B,oCC3LsC,CD+LtC,oBCrMiB,CDqMjB,wBCrMiB,CDsMjB,SAAU,CACV,cAAe,CACf,SAAU,CAbZ,mBAgBI,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,UAAW,CACX,wBC/Me,CDgNf,2BAA4B,CAC5B,wBCjNe,CDkNf,SAAU,CACV,SAAU,CACX,cAQD,iBAAkB,CAClB,WAAY,CACZ,qCCxNsC,CDyNtC,WAAY,CACZ,YAAa,CACb,iBAAkB,CAClB,eAAgB,CAChB,eAAgB,CACjB,SAKC,eAAgB,CAEhB,QAAS,CACT,UAAW,CACX,UAAW,CACX,WAAY,CACZ,+BAAA,CAAA,uBAAwB,CACzB,gBANC,iBAWY,CALb,OAIC,UAAW,CACX,WAAY,CACb,YAlPC,YAAa,CACb,YAAa,CACb,WAAY,CACZ,oCCDsC,CDEtC,6BCRiB,CDQjB,+BCRiB,CDSjB,yBAyPyC,CAxPzC,SAAU,CA0PV,oBCpQiB,CDoQjB,kBCpQiB,CDoQjB,4BCpQiB,CDqQjB,iBAAoB,CAJtB,kBAnPE,UAAW,CACX,iBAAkB,CAClB,SAwP8B,CAvP9B,SAuPoC,CAtPpC,WAAY,CACZ,UAAW,CACX,wBCpBiB,CDqBjB,wBAmPiD,CA/OjD,gBACE,iBAAkB,CAClB,SAgPyB,CA/OzB,QA+O8B,CA9O9B,UA8OoC,CA7OrC,kBAID,mBA2O0C,CA1O1C,8BAAgC,CA2O/B,cA1QD,YAAa,CACb,YAAa,CACb,WAAY,CACZ,oCCDsC,CDEtC,+BCRiB,CDQjB,8BCRiB,CDSjB,yBAyQyC,CAxQzC,SAAU,CA0QV,oBCpRiB,CDoRjB,kBCpRiB,CDoRjB,4BCpRiB,CDqRjB,iBAAkB,CAJpB,oBAnQE,UAAW,CACX,iBAAkB,CAClB,SAuQ8B,CAtQ9B,SAsQoC,CArQpC,WAAY,CACZ,UAAW,CACX,wBCpBiB,CDqBjB,wBAkQ+C,CA9P/C,kBACE,iBAAkB,CAClB,SA8PyB,CA7PzB,QA6P+B,CA5P/B,UA4PoC,CA3PrC,oBAID,kBA0PyC,CAzPzC,8BAAgC,CA0P/B,UAWD,YAAa,CACb,aAAgB,CAChB,SAAU,CACV,WAAY,CACZ,YAAa,CACb,kBAAmB,CACnB,eAAgB,CAChB,iBAAkB,CACnB,SAOC,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,UAAW,CACX,WAAY,CACZ,kBAAmB,CACnB,iBAAkB,CAClB,wBCtTW,CDuTX,UAAY,CACZ,cAAe,CACf,sBAAuB,CAExB,aAEC,YAAa","file":"main.cfea2b37.chunk.css","sourcesContent":["@import './variables';\r\n\r\n/*Mixins for Quarter Segments*/\r\n/*Function for the bottom button quarters*/\r\n@mixin quarter-circle-setup($border){\r\n  display: grid;\r\n  height: 100px;\r\n  width: 100px;\r\n  background-color: $transparentColor;\r\n  border: 2px solid $darkColor;\r\n  border-radius: $border;\r\n  z-index: 2;\r\n}\r\n/*Function for the circles on the quarters*/\r\n@mixin quarter-after($top, $left, $border-radius){\r\n  content: '';\r\n  position: relative;\r\n  top: $top;\r\n  left: $left;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: $darkColor;\r\n  border-radius: $border-radius;\r\n}\r\n/*Function for the icons in the quarters*/\r\n@mixin internalImage($left, $top, $width){\r\n  img{\r\n    position: relative;\r\n    left: $left;\r\n    top: $top;\r\n    width: $width;\r\n  }\r\n}\r\n/*Animations for the quarters*/\r\n@mixin quarter-animations($margin){\r\n  margin: $margin;\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n\r\n/*App Class*/\r\n/*basic reset*/\r\n*{\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.app{\r\n  /*Set the background to full screen\r\n  and centers the image in the blue.\r\n  */\r\n  background-color: $darkColor;\r\n  min-height: 100vh;\r\n  margin: auto;\r\n}\r\n\r\n/*Outside flex component*/\r\n.flex{\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/*Set the flex items mins*/\r\n.flexContainer{\r\n  display: flex;\r\n  min-width: 100px;\r\n}\r\n\r\n/*StateChanger Class*/\r\n/*These are the classes for the row of testing buttons*/\r\n.stateChanger{\r\n  margin: auto;\r\n  position: relative;\r\n  width: 150px;\r\n  height: 100px;\r\n}\r\n/*Buttons not including specific colors*/\r\n.button {\r\n  display:inline-block;\r\n  width: 120px;\r\n  margin: 5px 0;\r\n  padding:4px 12px;\r\n  background-color:#44c767;\r\n  border:none;\r\n  border-radius:28px;\r\n  cursor:pointer;\r\n  color:#333;\r\n  font-family: Arial, sans-serif;\r\n  font-size:14px;\r\n  text-decoration:none;\r\n  text-shadow:0 1px 0 #2f6627;\r\n  &:hover{\r\n    background-color:#fff;\r\n  }\r\n  &:active{\r\n    position:relative;\r\n    top:1px;\r\n  }\r\n}\r\n\r\n/*Color classes*/\r\n.red {\r\n  background-color: $red;\r\n}\r\n.lit {\r\n  background-color: $lightColor;\r\n}\r\n.unlit{\r\n  background-color: $mediumColor;\r\n}\r\n\r\n/*Dial class*/\r\n/*Grid container for the dial*/\r\n/*\r\nI stack all the elements centered using grid\r\nand margin auto so I don't have to use much\r\nabsolute positioning.\r\n*/\r\n.dial-container{\r\n  margin: auto;\r\n  width: 300px;\r\n  height: 300px;\r\n  display: grid;\r\n  grid-template-columns: 300px;\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 0;\r\n  grid-row-gap: 0;\r\n}\r\n/*\r\nThis item sits behind all the elements in the\r\ncenter of the dial to block color coming through\r\nand providing the right color for transparency\r\n*/\r\n.center{\r\n  display: grid;\r\n  grid-area: 1 /1;\r\n  position: relative;\r\n  margin: auto;\r\n  height: 220px;\r\n  width: 220px;\r\n  background-color: $darkColor;\r\n  border: 6px solid $transparentColor;\r\n  border-radius: 50%;\r\n}\r\n\r\n/*Center Circle Classes*/\r\n.gridItem{\r\n  display: grid;\r\n  grid-area: 1 / 1;\r\n}\r\n/*\r\nThis class holds all the center elements together\r\n*/\r\n.circle-container{\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 100px);\r\n  grid-template-rows: repeat(2, 100px);\r\n  grid-column-gap: 0;\r\n  grid-row-gap: 0;\r\n}\r\n\r\n/*Curved Text Classes*/\r\n/*I use an SVG to curve the text*/\r\npath {\r\n  fill: transparent;\r\n}\r\ntext {\r\n  fill: $fontColor;\r\n  font-family: sans-serif;\r\n  text-anchor: middle;\r\n}\r\n.text{\r\n  display: grid;\r\n  position: relative;\r\n  top: 20px;\r\n}\r\n\r\n/*Half Circle Classes*/\r\n/*\r\nThis is the class for the top half of the dial\r\n*/\r\n.half-circle{\r\n  display: grid;\r\n  grid-area: 2/1 /1 /1;\r\n  height: 100px;\r\n  width: 200px;\r\n  border-radius: 150px 150px 0 0;\r\n  background-color: $transparentColor;\r\n  border-bottom: 2px solid $darkColor;\r\n  border-top: 5px solid $darkColor;\r\n  border-right: 5px solid $darkColor;\r\n  border-left: 5px solid $darkColor;\r\n  outline: 0;\r\n  font-size: 24px;\r\n  z-index: 2;\r\n\r\n  &::after{\r\n    position: relative;\r\n    content: '';\r\n    height: 25px;\r\n    width: 50px;\r\n    border: 1px solid $darkColor;\r\n    border-radius: 45px 45px 0 0;\r\n    background-color: $darkColor;\r\n    top: -47px;\r\n    left: 68px;\r\n  }\r\n}\r\n\r\n/*Outer Ring classes*/\r\n/*\r\nThese classes handle the outer ring.\r\n*/\r\n.sliceWrapper {\r\n  position: relative;\r\n  margin: auto;\r\n  border: 10px solid $transparentColor;\r\n  width: 270px;\r\n  height: 270px;\r\n  border-radius: 50%;\r\n  list-style: none;\r\n  overflow: hidden;\r\n}\r\n/*\r\nThis handles the indicators positioning.\r\n*/\r\nli.chunk {\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: -50%;\r\n  right: -50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform-origin: 0 100%;\r\n}\r\n/*This handles the slices themselves*/\r\n.slice {\r\n  position: absolute;\r\n  width: 200%;\r\n  height: 200%;\r\n}\r\n\r\n\r\n\r\n\r\n/*Quarter Classes*/\r\n/*\r\nThis section uses mixins because they are two\r\nsimilar objects. I could have also used additive\r\nclasses.\r\n*/\r\n.mag-circle{\r\n  @include quarter-circle-setup(0 0 0 100px);\r\n  border-bottom: 5px solid $darkColor;\r\n  border-left: 5px solid $darkColor;\r\n  grid-area: 2/1 /2 /1;\r\n\r\n  &::after{\r\n    @include quarter-after(-58px, 68px,  0 0 0 30px);\r\n\r\n  }\r\n  @include internalImage(33px,18px, 46px);\r\n  &:hover{\r\n    @include quarter-animations(3px 0 0 -3px)\r\n  }\r\n}\r\n\r\n.visit-circle{\r\n  @include quarter-circle-setup(0 0 100px 0);\r\n  border-bottom: 5px solid $darkColor;\r\n  border-right: 5px solid $darkColor;\r\n  grid-area: 2/2/2/2;\r\n  &::after{\r\n    @include quarter-after(-55px, -2px,0 0 30px 0);\r\n  }\r\n  @include internalImage(20px, 15px,40px);\r\n\r\n  &:hover{\r\n    @include quarter-animations(3px 0 0 3px);\r\n  }\r\n}\r\n\r\n/*Ring Icons Classes*/\r\n/*\r\nFor the icons on the red indicators i use a ring\r\nthat I split and style using procedurally generated\r\nJSS in its component files. Here we have the positioning\r\nand coloring for those elements.\r\n*/\r\n.gridItem{\r\n  display: grid;\r\n  grid-area: 1 / 1;\r\n  padding: 0;\r\n  width: 280px;\r\n  height: 280px;\r\n  border-radius: 100%;\r\n  list-style: none;\r\n  position: relative;\r\n}\r\n/*\r\n  This is set to display none unless the red\r\n  class.\r\n  TODO change the x's to be better\r\n*/\r\nli.cross{\r\n  display: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 26px;\r\n  height: 26px;\r\n  padding-bottom: 3px;\r\n  border-radius: 50%;\r\n  background-color: $red;\r\n  color: white;\r\n  font-size: 10px;\r\n  font-family: sans-serif;\r\n\r\n}\r\nli.cross.red{\r\n  display: flex;\r\n}\r\n\r\n","//Dark color is the background\r\n$darkColor: #2B74A1;\r\n//Medium color is Unlit\r\n$mediumColor: rgba(115,133,145,0.65);\r\n//Light color is Lit\r\n$lightColor: rgba(255,255,255,.676);\r\n//Transparent Color Is the main item background color\r\n$transparentColor: rgba(255,255,255,.21);\r\n//Red is the Broken color\r\n$red: #C42E2E;\r\n//Font color is for the text and icons\r\n$fontColor:#EBF1F5;\r\n\r\n"]}